name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: andino
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      FROM_EMAIL: fake@example.com
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/andino
      AWS_ACCESS_KEY_ID: aws-access-key_id
      AWS_SECRET_ACCESS_KEY: aws-secret-access-key
      AWS_REGION: aws-region
      AWS_S3_BUCKET_NAME: aws-s3-bucket-name
      NEXT_PUBLIC_URL: http://localhost:3000
      CALLBACK: /api/auth/google/callback
      GOOGLE_CLIENT_ID: google-client-id
      GOOGLE_CLIENT_SECRET: google-client-secret

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run generate

      - name: Run Prisma Migrations
        run: npm run migrate

      - name: Build and Lint
        run: npm run build && npm run lint

    # Optionally, add a test step if you have tests
    # - name: Run tests
    #   run: npm test
    #   env:
    #     FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
    #     DATABASE_URL: postgresql://postgres:postgres@localhost:5432/andino
